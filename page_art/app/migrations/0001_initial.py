# Generated by Django 5.1.5 on 2025-04-07 13:40

import app.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artactividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ExcelFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.FileField(help_text='Sube el archivo Excel aquí.', upload_to=app.models.upload_to, verbose_name='Archivo Excel')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FormularioChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('item', models.CharField(max_length=255)),
                ('aspecto_a_verificar', models.CharField(max_length=255)),
                ('bueno', models.CharField(max_length=100)),
                ('malo', models.CharField(max_length=100)),
                ('comentarios', models.CharField(max_length=255)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_revision', 'En Revisión'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado')], default='pendiente', max_length=20)),
                ('version', models.CharField(max_length=20)),
                ('codigo', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, validators=[app.models.validar_tres_digitos])),
                ('descripcion', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TareaChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/', verbose_name='Foto')),
                ('identity_card', models.CharField(blank=True, help_text='El carnet de identidad debe ser único.', max_length=20, null=True, unique=True, verbose_name='Carnet de Identidad')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Apellido')),
                ('phone_number', models.CharField(default='', help_text='Incluye el código de área si es necesario. Ejemplo: +591 78965412', max_length=15, verbose_name='Número de Celular')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Correo Electrónico')),
                ('shift_type', models.CharField(blank=True, choices=[('Día', 'Día'), ('Noche', 'Noche')], help_text='Indica si el usuario está en el turno de día o de noche.', max_length=10, null=True, verbose_name='Turno')),
                ('shift_group', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Grupo 1'), (2, 'Grupo 2'), (3, 'Grupo 3'), (4, 'Grupo 4')], help_text='Selecciona el grupo de turno del usuario (1 a 4).', null=True, verbose_name='Grupo')),
                ('role', models.CharField(blank=True, choices=[('jefe_area', 'Jefe de Área'), ('capataz', 'Capataz'), ('operador', 'Operador')], help_text='Rol del usuario en el sistema.', max_length=20, null=True, verbose_name='Rol')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Actividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.TextField()),
                ('artactividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.artactividad')),
            ],
        ),
        migrations.CreateModel(
            name='MedidaControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medidascontrol', to='app.actividad')),
            ],
        ),
        migrations.CreateModel(
            name='Peligro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='peligros', to='app.actividad')),
            ],
        ),
        migrations.CreateModel(
            name='RespuestaChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_respuesta', models.DateTimeField(auto_now_add=True)),
                ('comentario_general', models.TextField(blank=True, null=True)),
                ('formulario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas', to='app.formulariochecklist')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RevisionChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_revision', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('revisado', 'Revisado'), ('observado', 'Observado')], default='pendiente', max_length=20)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('respuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisiones', to='app.respuestachecklist')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_revision'],
            },
        ),
        migrations.CreateModel(
            name='Riesgo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='riesgos', to='app.actividad')),
            ],
        ),
        migrations.AddField(
            model_name='formulariochecklist',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formularios', to='app.sector'),
        ),
        migrations.CreateModel(
            name='RespuestaTarea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado_bueno', models.BooleanField(default=False)),
                ('estado_malo', models.BooleanField(default=False)),
                ('comentario', models.TextField(blank=True, null=True)),
                ('respuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas_tareas', to='app.respuestachecklist')),
                ('tarea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tareachecklist')),
            ],
        ),
        migrations.CreateModel(
            name='TituloChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('formulario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='titulos', to='app.formulariochecklist')),
            ],
        ),
        migrations.AddField(
            model_name='tareachecklist',
            name='titulo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tareas', to='app.titulochecklist'),
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opcion', models.CharField(choices=[('210', '210-CHANCADO'), ('220', '220-DOMO'), ('230', '230-MOLIENDA'), ('240', '240-FLOTACION PLOMO'), ('250', '250-FLOTACION ZINC'), ('270', '270-REACTIVOS'), ('310', '310-ESPESADORES'), ('320', '320-FILTROS'), ('330', '330-CARGUIO')], help_text='Selecciona una opción de Area predefinida.', max_length=3, verbose_name='Opción de Area')),
                ('artactividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Area', to='app.artactividad', verbose_name='Area Principal')),
            ],
            options={
                'verbose_name': 'Area',
                'verbose_name_plural': 'Areas',
                'constraints': [models.UniqueConstraint(fields=('artactividad', 'opcion'), name='unique_artactividad_opcion')],
            },
        ),
    ]
